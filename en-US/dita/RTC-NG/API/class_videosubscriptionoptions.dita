<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="class_videosubscriptionoptions">
    <title><ph keyref="VideoSubscriptionOptions"/></title>
    <shortdesc id="short"><ph id="shortdesc">Video subscription options.</ph></shortdesc>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java"/>
                <codeblock props="ios mac" outputclass="language-objectivec"/>
                <codeblock props="cpp" outputclass="language-cpp"/>
                <codeblock props="cs" outputclass="language-csharp"/>
                <codeblock props="electron" outputclass="language-typescript">export class VideoSubscriptionOptions {
  
  type?: VideoStreamType;
  
  encodedFrameOnly?: boolean;
}</codeblock>
                <codeblock props="unity" outputclass="language-csharp">public class VideoSubscriptionOptions:OptionalJsonParse
    {
        public Optional&lt;VIDEO_STREAM_TYPE&gt; type = new Optional&lt;VIDEO_STREAM_TYPE&gt;();

        public Optional&lt;bool&gt; encodedFrameOnly = new Optional&lt;bool&gt;();
    }</codeblock>
                <codeblock props="rn" outputclass="language-typescript">export class VideoSubscriptionOptions {
  
  type?: VideoStreamType;
 
  encodedFrameOnly?: boolean;
}</codeblock>
                <codeblock props="flutter" outputclass="language-dart">class VideoSubscriptionOptions {
  
  const VideoSubscriptionOptions({this.type, this.encodedFrameOnly});

  @JsonKey(name: 'type')
  final VideoStreamType? type;

  @JsonKey(name: 'encodedFrameOnly')
  final bool? encodedFrameOnly;

  factory VideoSubscriptionOptions.fromJson(Map&lt;String, dynamic&gt; json) =&gt;
      _$VideoSubscriptionOptionsFromJson(json);

  Map&lt;String, dynamic&gt; toJson() =&gt; _$VideoSubscriptionOptionsToJson(this);
}</codeblock>
            </p>
        </section>
        <section id="parameters">
            <title><text conref="../conref/conref_api_metadata.dita#conref_api_metadata/property"
                /></title>
            <parml>
                <plentry>
                    <pt>type</pt>
                    <pd>The video stream type that you want to subscribe to. The default value is
                            <ph keyref="VIDEO_STREAM_HIGH"/>, meaning the high-quality video
                        streams. See <xref keyref="VIDEO_STREAM_TYPE"/>.</pd>
                </plentry>
                <plentry>
                    <pt>encodedFrameOnly</pt>
                    <pd>Whether to subscribe to encoded video frames only:<ul>
                            <li><codeph><ph keyref="true"/></codeph>: Subscribe to encoded video
                                frames only (structured data).</li>
                            <li><codeph><ph keyref="false"/></codeph>: (Default) Subscribe to raw
                                video frames.</li>
                        </ul></pd>
                </plentry>
            </parml>
        </section>
    </refbody>
</reference>
