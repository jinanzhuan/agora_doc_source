<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="api_imediaengine_registervideoencodedframeobserver">
    <title><ph keyref="registerVideoEncodedFrameObserver"/></title>
    <shortdesc id="short"><ph id="shortdesc">为编码后的视频图像注册视频帧接收观测器。</ph></shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm keyref="registerVideoEncodedFrameObserver"/>
            </keywords>
        </metadata>
    </prolog>
    <refbody>
        <section id="prototype">
            <p outputclass="codeblock">
                <codeblock props="android" outputclass="language-java">public abstract int registerVideoEncodedFrameObserver(IVideoEncodedFrameObserver receiver);
</codeblock>
                <codeblock props="ios mac" outputclass="language-objectivec">- (BOOL)setEncodedVideoFrameDelegate:(id&lt;AgoraEncodedVideoFrameDelegate&gt; _Nullable)delegate;</codeblock>
                <codeblock props="cpp" outputclass="language-cpp">virtual int registerVideoEncodedFrameObserver(IVideoEncodedFrameObserver* observer) = 0;
</codeblock></p>
            <codeblock props="electron" outputclass="language-typescript">abstract registerVideoEncodedFrameObserver(
    observer: IVideoEncodedFrameObserver
  ): number;</codeblock>
            <codeblock props="unity" outputclass="language-csharp">public abstract void RegisterVideoEncodedImageReceiver(IVideoEncodedImageReceiver videoEncodedImageReceiver, OBSERVER_MODE mode = OBSERVER_MODE.INTPTR);</codeblock>
            <codeblock props="rn" outputclass="language-typescript">abstract registerVideoEncodedFrameObserver(
    observer: IVideoEncodedFrameObserver
  ): number;</codeblock>
            <codeblock props="flutter" outputclass="language-dart">void registerVideoEncodedFrameObserver(VideoEncodedFrameObserver observer);</codeblock>
        </section>
        <section id="detailed_desc">
            <note type="attention">
                <ul>
                    <li>请在加入频道后调用该方法。</li>
                    <li>如果你调用该方法注册了 <xref keyref="IVideoEncodedFrameObserver"/> 对象，则不能再注册 <xref
                            keyref="IVideoFrameObserver"/> 对象。</li>
                </ul>
            </note>
        </section>
        <section id="parameters">
            <title>参数</title>
            <parml>
                <plentry>
                    <pt props="ios mac">delegate</pt>
                    <pt props="android">receiver</pt>
                    <pt props="cpp electron rn flutter">observer</pt>
                    <pt props="unity">videoEncodedImageReceiver</pt>
                    <pd props="android cpp unity rn electron flutter">视频帧接收观测器，详见 <xref
                            keyref="IVideoEncodedFrameObserver"/>。</pd>
                    <pd props="ios mac">接口对象实例。详见 <xref keyref="IVideoEncodedFrameObserver"/>。如果传入
                            <ph keyref="NULL"/>，则表示取消注册。</pd>
                </plentry>
                <plentry props="unity">
                    <pt>mode</pt>
                    <pd>视频数据回调模式，详见 <xref keyref="OBSERVER_MODE"/>。</pd>
                </plentry>
            </parml>
        </section>
        <section id="return_values" props="native electron rn">
            <title>返回值</title>
            <ul props="android cpp electron rn">
                <li>0：方法调用成功。</li>
                <li>&lt; 0: 方法调用失败。</li>
            </ul>
            <ul props="mac ios">
                <li><codeph><ph keyref="true"/></codeph>: 方法调用成功。</li>
                <li><codeph><ph keyref="false"/></codeph>: 方法调用失败。</li>
            </ul>
        </section>
    </refbody>
</reference>
